# comment

# first lines that start with "-- " are copied to file
-- module Task2 (parse) where
-- import Task2Common

%token Token
%file ()

name  <== TName y
# do not forget this newline, gets arguments as `\token position ->`, defaults to `(const . const) ()`
# for short: `const2 ()`
      ==> const
minus <== TMinus
      ==> const2 Minus
and   <== TAnd
      ==> const2 And
xor   <== TXor
      ==> const2 Xor
or    <== TOr
      ==> const2 Or
in    <== TIn
      ==> const2 In
not   <== TNot
lpar  <== TLParen
rpar  <== TRParen

FILE
	| EXPR ==> id

EXPR
	| OR ==> id

%oper l MINUS minus ATOM

# make binary operator
%oper
	# associativity one of: l
	l
	# name
	AND
	# operator single [non]terminal
	and
	# operand [non]terminal
	MINUS
	# what É› does (function that is applied to rightmost operand: a -> a), defaults to id
	==> id

%oper l XOR xor AND
%oper l OR or XOR
%oper l IN NOTIN OR

NOTIN
	| in     ==> \_ _ -> In
	| not in ==> \l r -> Not $ In l r

ATOM
	| name           ==> snd
	| not ATOM       ==> const . Not
	| lpar EXPR rpar ==> const const
