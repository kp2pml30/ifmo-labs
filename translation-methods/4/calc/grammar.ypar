-- module Par (parse) where
-- import Token

%token Token
%file Int

num <== TNum y
	==> y
addsub
	<== TSub
	==> (-)
	<== TAdd
	==> (+)
muldiv
	<== TMul
	==> (*)
	<== TDiv
	==> div
lpar <== TLParen
rpar <== TRParen

FILE
	| EXPR ==> id

EXPR
	| ADDSUB ==> id

%oper l ADDSUB addsub MULDIV
%oper l MULDIV muldiv ATOM

ATOM
	| num ==> id
	| lpar EXPR rpar ==> const const

