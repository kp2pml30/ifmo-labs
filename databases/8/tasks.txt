5.1.1: Информацию о студентах. С заданным идентификатором (StudentId, StudentName, GroupId по :StudentId).
5.1.2: Информацию о студентах. С заданным ФИО (StudentId, StudentName, GroupId по :StudentName).
5.2.1: Полную информацию о студентах. С заданным идентификатором (StudentId, StudentName, GroupName по :StudentId).
5.2.2: Полную информацию о студентах. С заданным ФИО (StudentId, StudentName, GroupName по :StudentName).
5.3.1: Информацию о студентах с заданной оценкой по дисциплине. С заданным идентификатором (StudentId, StudentName, GroupId по :Mark, :CourseId).
5.3.2: Информацию о студентах с заданной оценкой по дисциплине. С заданным названием (StudentId, StudentName, GroupId по :Mark, :CourseName).
5.3.3: Информацию о студентах с заданной оценкой по дисциплине. Которую у него вёл лектор заданный идентификатором (StudentId, StudentName, GroupId по :Mark, :LecturerId).
5.3.4: Информацию о студентах с заданной оценкой по дисциплине. Которую у него вёл лектор, заданный ФИО (StudentId, StudentName, GroupId по :Mark, :LecturerName).
5.3.5: Информацию о студентах с заданной оценкой по дисциплине. Которую вёл лектор, заданный идентификатором (StudentId, StudentName, GroupId по :Mark, :LecturerId).
5.3.6: Информацию о студентах с заданной оценкой по дисциплине. Которую вёл лектор, заданный ФИО (StudentId, StudentName, GroupId по :Mark, :LecturerName).
5.4.1: Информацию о студентах не имеющих оценки по дисциплине. Среди всех студентов (StudentId, StudentName, GroupId по :CourseName).
5.4.2: Информацию о студентах не имеющих оценки по дисциплине. Среди студентов, у которых есть эта дисциплина (StudentId, StudentName, GroupId по :CourseName).
5.5.1: Для каждого студента ФИО и названия дисциплин. Которые у него есть по плану (StudentName, CourseName).
5.5.2: Для каждого студента ФИО и названия дисциплин. Есть, но у него нет оценки (StudentName, CourseName).
5.5.3: Для каждого студента ФИО и названия дисциплин. Есть, но у него не 4 или 5 (StudentName, CourseName).
5.6.1: Идентификаторы студентов по преподавателю. Имеющих хотя бы одну оценку у преподавателя (StudentId по :LecturerName).
5.6.2: Идентификаторы студентов по преподавателю. Не имеющих ни одной оценки у преподавателя (StudentId по :LecturerName).
5.6.3: Идентификаторы студентов по преподавателю. Имеющих оценки по всем дисциплинам преподавателя (StudentId по :LecturerName).
5.6.4: Идентификаторы студентов по преподавателю. Имеющих оценки по всем дисциплинам преподавателя, которые он вёл у этого студента (StudentId по :LecturerName).
5.7.1: Группы и дисциплины, такие что все студенты группы имеют оценку по этой дисциплине. Идентификаторы (GroupId, CourseId).
5.7.2: Группы и дисциплины, такие что все студенты группы имеют оценку по этой дисциплине. Названия (GroupName, CourseName).
5.8.1: Суммарный балл. Одного студента (SumMark по :StudentId).
5.8.2: Суммарный балл. Каждого студента (StudentName, SumMark).
5.8.3: Суммарный балл. Каждой группы (GroupName, SumMark).
5.9.1: Средний балл. Одного студента (AvgMark по :StudentId).
5.9.2: Средний балл. Каждого студента (StudentName, AvgMark).
5.9.3: Средний балл. Каждой группы (GroupName, AvgMark).
5.9.4: Средний балл. Средний балл средних баллов студентов каждой группы (GroupName, AvgAvgMark).
5.10.1: Для каждого студента: число дисциплин, которые у него были, число сданных дисциплин и число несданных дисциплин (StudentId, Total, Passed, Failed).
6.1.1: Информацию о студентах. С заданным ФИО (StudentId, StudentName, GroupId по :StudentName).
6.1.2: Информацию о студентах. Учащихся в заданной группе (StudentId, StudentName, GroupId по :GroupName).
6.1.3: Информацию о студентах. C заданной оценкой по дисциплине, заданной идентификатором (StudentId, StudentName, GroupId по :Mark, :CourseId).
6.1.4: Информацию о студентах. C заданной оценкой по дисциплине, заданной названием (StudentId, StudentName, GroupId по :Mark, :CourseName).
6.2.1: Полную информацию о студентах. Для всех студентов (StudentId, StudentName, GroupName).
6.2.2: Полную информацию о студентах. Студентов, не имеющих оценки по дисциплине, заданной идентификатором (StudentId, StudentName, GroupName по :CourseId).
6.2.3: Полную информацию о студентах. Студентов, не имеющих оценки по дисциплине, заданной названием (StudentId, StudentName, GroupName по :CourseName).
6.2.4: Полную информацию о студентах. Студентов, не имеющих оценки по дисциплине, у которых есть эта дисциплина (StudentId, StudentName, GroupName по :CourseId).
6.2.5: Полную информацию о студентах. Студентов, не имеющих оценки по дисциплине, у которых есть эта дисциплина (StudentId, StudentName, GroupName по :CourseName).
6.3.1: Студенты и дисциплины, такие что у студента была дисциплина (по плану или есть оценка). Идентификаторы (StudentId, CourseId).
6.3.2: Студенты и дисциплины, такие что у студента была дисциплина (по плану или есть оценка). Имя и название (StudentName, CourseName).
6.4.1: Студенты и дисциплины, такие что дисциплина есть в его плане, и у студента долг по этой дисциплине. Долгом считается отсутствие оценки (StudentName, CourseName).
6.4.2: Студенты и дисциплины, такие что дисциплина есть в его плане, и у студента долг по этой дисциплине. Долгом считается оценка не выше 2 (StudentName, CourseName).
6.4.3: Студенты и дисциплины, такие что дисциплина есть в его плане, и у студента долг по этой дисциплине. Долгом считается отсутствие оценки или оценка не выше 2 (StudentName, CourseName).
6.5.1: Идентификаторы студентов по преподавателю. Имеющих хотя бы одну оценку у преподавателя (StudentId по :LecturerName).
6.5.2: Идентификаторы студентов по преподавателю. Не имеющих ни одной оценки у преподавателя (StudentId по :LecturerName).
6.5.3: Идентификаторы студентов по преподавателю. Имеющих оценки по всем дисциплинам преподавателя (StudentId по :LecturerName).
6.5.4: Идентификаторы студентов по преподавателю. Имеющих оценки по всем дисциплинам преподавателя, которые он вёл у этого студента (StudentId по :LecturerName).
6.6.1: Группы и дисциплины, такие что все студенты группы имеют оценку по предмету. Идентификаторы (GroupId, CourseId).
6.6.2: Группы и дисциплины, такие что все студенты группы имеют оценку по предмету. Названия (GroupName, CourseName).
7.1.1: Напишите запросы, удаляющие студентов. Учащихся в группе, заданной идентификатором (GroupId).
7.1.2: Напишите запросы, удаляющие студентов. Учащихся в группе, заданной названием (GroupName).
7.1.3: Напишите запросы, удаляющие студентов. Без оценок.
7.1.4: Напишите запросы, удаляющие студентов. Имеющих 3 и более оценки.
7.1.5: Напишите запросы, удаляющие студентов. Имеющих 3 и менее оценки.
7.1.6: Напишите запросы, удаляющие студентов. Студентов, c долгами (здесь и далее — по отсутствию оценки).
7.1.7: Напишите запросы, удаляющие студентов. Студентов, имеющих 2 и более долга.
7.1.8: Напишите запросы, удаляющие студентов. Студентов, имеющих не более 2 долгов.
7.2.1: Напишите запросы, обновляющие данные студентов. Изменение имени студента (StudentId, StudentName).
7.2.2: Напишите запросы, обновляющие данные студентов. Перевод студента из группы в группу по индентификаторам (StudentId, GroupId, FromGroupId).
7.2.3: Напишите запросы, обновляющие данные студентов. Перевод всех студентов из группы в группу по идентификаторам (GroupId, FromGroupId).
7.2.4: Напишите запросы, обновляющие данные студентов. Перевод всех студентов из группы в группу по названиям (GroupName, FromGroupName).
7.2.5: Напишите запросы, обновляющие данные студентов. Перевод всех студентов из группы в группу, только если целевая группа существует (GroupName, FromGroupName).
7.3.1: Напишите запросы, подсчитывающие статистику по студентам. Число оценок студента (столбец Students.Marks) (StudentId).
7.3.2: Напишите запросы, подсчитывающие статистику по студентам. Число оценок каждого студента (столбец Students.Marks).
7.3.3: Напишите запросы, подсчитывающие статистику по студентам. Пересчет числа оценок каждого студента, с учётом новых оценок из таблицы NewMarks, структура которой такая же как у таблицы Marks (столбец Students.Marks).
7.3.4: Напишите запросы, подсчитывающие статистику по студентам. Число сданных дисциплин каждого студента (столбец Students.Marks).
7.3.5: Напишите запросы, подсчитывающие статистику по студентам. Число долгов студента (столбец Students.Debts) (StudentId).
7.3.6: Напишите запросы, подсчитывающие статистику по студентам. Число долгов каждого студента (столбец Students.Debts).
7.3.7: Напишите запросы, подсчитывающие статистику по студентам. Число долгов каждого студента группы (столбец Students.Debts) (GroupName).
7.3.8: Напишите запросы, подсчитывающие статистику по студентам. Число оценок и долгов каждого студента (столбцы Students.Marks, Students.Debts).
7.4.1: Напишите запросы, обновляющие оценки, с учетом данных из таблицы. Проставляющий новую оценку только если ранее оценки не было.
7.4.2: Напишите запросы, обновляющие оценки, с учетом данных из таблицы. Проставляющий новую оценку только если ранее оценка была.
7.4.3: Напишите запросы, обновляющие оценки, с учетом данных из таблицы. Проставляющий максимум из старой и новой оценки только если ранее оценка была.
7.4.4: Напишите запросы, обновляющие оценки, с учетом данных из таблицы. Проставляющий максимум из старой и новой оценки (если ранее оценки не было, то новую оценку).
7.5.1: Работа с представлениями. Создайте представление StudentMarks в котором для каждого студента указано число оценок (StudentId, Marks).
7.5.2: Работа с представлениями. Создайте представление AllMarks в котором для каждого студента указано число оценок, включая оценки из таблицы NewMarks (StudentId, Marks).
7.5.3: Работа с представлениями. Создайте представление Debts в котором для каждого студента, имеющего долги указано их число (StudentId, Debts).
7.5.4: Работа с представлениями. Создайте представление StudentDebts в котором для каждого студента указано число долгов (StudentId, Debts).
7.6.1: Целостность данных. Добавьте проверку того, что у студентов есть оценки только по дисциплинам из их плана (NoExtraMarks).
7.6.2: Целостность данных. Добавьте проверку того, что все студенты каждой группы имеют оценку по одному и тому же набору дисциплин (SameMarks).
7.6.3: Целостность данных. Создайте триггер PreserveMarks, не позволяющий уменьшить оценку студента по дисциплине. При попытке такого изменения оценка изменяться не должна.
