# миниусловие
2^m-1 людей, у каждого случайный **независимый** bool
знает всех кроме себя
# тривиальная стратегия
т.к. величины независимые x_j не помогают угадать если ответа не знаю не существует
тогда все кроме кого-то заранее выбранного могут ответить не знаю, а этот человек сказать случайное число (они заранее могут обсудить кто это). Тогда p выживания = 0.5
# можно ли лучше?
эталонные мат ожидане и дисперсия: 0.5, 1/12

* m=0, n=0, всех казнили $p=1$
* m=1, n=1, $p=0.5$

* m=2, n=3
	количество единичек: 0 или 3 -- 1, 1 или 2 -- 3
	стратегия: если человек видит два одинаковых числа он говорит противоположное, иначе не знаю
	x  x x все не знают, две казни
	x !x x только один человек говорит число и угадывает, ноль казней
	$p=2/8=0.25$
	`# np.mean([i + j + k for i in [0, 1] for j in [0, 1] for k in [0, 1]]) = 1.5`

* m=3, n=7
	```
	def rec1(i, t, s):
		if i == t:
			yield s
			return
		yield from rec1(i+1, t, s+1)
		yield from rec1(i+1, t, s)
	arr = np.fromiter(rec1(0, 7, 0), dtype=int)
	unique, counts = np.unique(arr, return_counts=True)
	counts # array([ 1,  7, 21, 35, 35, 21,  7,  1])
	```
	тогда мы можем рассчитывать на эти 35 и получить больше 50%
стратегия: если видим ровно 4 одинаковых числа, говорим противоположное, а иначе не знаем
тогда мы выиграем в случаях 35 и проиграем во всех остальных
	почему мы не можем в случае 5x сказать !x? потому что тогда кто-из них и так увидет 4x и ошибется в своем числе

	$p=0.453125$

# обобщенная стратегия
если мы видим ровно $2^{m-1}$ одинаковых чисел, мы говорим противоположное
какова тогда вероятность проигрыша?
$1-\frac{2\cdot{{2^m-1}\choose{2^{m-1}}}}{2^n}=1-2\frac{(2^m-1)!}{2^{m-1}!(2^m-1-2^{m-1})!2^n}=1-2\frac{(2^m-1)!}{2^{m-1}!(2^{m-1}-1)!2^n}=1-2\frac{(2^m-1)!}{(2^{m-1}-1)!^22^{m-1}2^{2^m-1}}$

и это возрастает и уже на m=4 дает результат хуже случайного -_-

